name: Scrape & Clean (daily)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "15 6 * * *"   # 06:15 UTC

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps (incl. Scrapy)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install "scrapy==2.11.2"

      - name: Run spider → raw_data.json
        # Le scraping peut être bloqué par le site : on ne casse pas la CI
        continue-on-error: true
        timeout-minutes: 12
        run: |
          python -m scrapy runspider src/spider.py \
            -O data/raw_data.json -s FEED_EXPORT_ENCODING=utf-8

      - name: Clean data → cleaned_data.csv
        continue-on-error: true
        run: python src/cleaner.py

      - id: hasdata
        name: Check cleaned_data.csv has rows
        shell: bash
        run: |
          if [ -s data/cleaned_data.csv ] && [ "$(wc -l < data/cleaned_data.csv)" -gt 1 ]; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
            echo "Rows: $(wc -l < data/cleaned_data.csv)"
          else
            echo "ok=false" >> "$GITHUB_OUTPUT"
            echo "No data – skipping commit"
          fi

      - name: Commit & push artifacts
        if: steps.hasdata.outputs.ok == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/raw_data.json data/cleaned_data.csv
          git commit -m "CI: update data ($(date -u +'%Y-%m-%d %H:%M UTC'))"
          git push

      - name: Note when skipped
        if: steps.hasdata.outputs.ok != 'true'
        run: echo "Dataset vide → on ne pousse rien."
